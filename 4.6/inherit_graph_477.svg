<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.30.1 (20200304.1809)
 -->
<!-- Title: Graphical Class Hierarchy Pages: 1 -->
<svg width="222pt" height="32pt"
 viewBox="0.00 0.00 222.00 32.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 28)">
<title>Graphical Class Hierarchy</title>
<polygon fill="white" stroke="white" points="-4,5 -4,-28 219,-28 219,5 -4,5"/>
<!-- Node0 -->
<g id="node1" class="node"><title>Node0</title>
<g id="a_node1"><a xlink:href="classmfem_1_1ParMortarAssembler.html" target="_top" xlink:title="This class implements the parallel variational transfer between finite element spaces. Variational transfer has been shown to have better approximation properties than standard interpolation. This facilities can be used for supporting applications which require the handling of non matching meshes. For instance: General multi&#45;physics problems, fluid structure interaction, or even visualization of average quantities within subvolumes. This particular code is also used with LLNL for large scale multilevel Monte Carlo simulations. This algorithm allows to perform quadrature in the intersection of elements of two separate, unrelated, and arbitrarily distributed meshes. It generates quadrature rules in the intersection which allows us to integrate with to machine precision using the mfem::MortarIntegrator interface. See https://doi.org/10.1137/15M1008361 for and in&#45;depth explanation. At this time curved elements are not supported. Convex non&#45;affine elements are partially supported, however, high order (&gt;3) finite element discretizations or nonlinear geometric transformations might generate undesired oscillations. Discontinuous fields in general can only be mapped to order 0 destination fields. For such cases localized versions of the projection will have to be developed. ">
<polygon fill="white" stroke="black" points="0,-0.5 0,-23.5 214,-23.5 214,-0.5 0,-0.5"/>
<text text-anchor="middle" x="107" y="-8.3" font-family="Helvetica,sans-Serif" font-size="14.00">mfem::ParMortarAssembler</text>
</a>
</g>
</g>
</g>
</svg>
